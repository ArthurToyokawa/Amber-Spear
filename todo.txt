cria uma classe player herdando gameObject


usar mylib pra controlar a vetores

cria uma classe vetor chamada dentro de objeto
vetor velocidade;
vetor posicao;

objetos andam uma quantidade = vel*tempo
caso tiver lag tem que calcular com o tempo extra

usa box2d pra lidar com fisica
!IMPORTANTE separar logica de jogo e processamento de fisica 
ex programa a fisica em metros e segundos 
-> traduz para o jogo em px (cria uma var float metroPrapx = 100(cada metro é 100px))


criar uma classe para dar objectManager contem todos os objetos
chama o update só so objectManager ao inves de em cada objeto 1 por 1



colisão:
checa se tem uma colisão 
resolve a colisão -> empurra os objetos até acabar a colisão





LISTA DE SPELLS

fireball: explode em area apos acertar um alvo
amber spear: carrega por 2 segundos e depois faz um raio que empurra tudo no seu caminho
ram: ganha velocidade e massa usado para empurrar inimigos ou tankar hits
roots: cria uma area por 10 segundos qualquer entidade dentro dela fica com friccao maior










CHECAR COM O PROFESSOR 
Onde eu guardo Inicializadores de gameObjects comuns
Como eu salvo o physicsComponent e spellComponent




refatorar o gameObject para conter alive, position, e funções
o physics e o sprite são setados por metodos de init e não no construtor

implementar sitema de vida
separar o spriteComponent para fora de gameObject
implementar sprites de background para colisão
implementar componente de aura/efeitos (tem um timer e um efeito)(ex veneno, buff, debuff)

implementar um listener para calcular efeitos fora de colisão, solisão é apenas para dois objetos com fisica e sem efeitos secundarios
esse listener pode ser sobrescrito para adicionar um efeito separado

implementar uma lista de objetos filhos (ex inimigo com uma poison cloud ao redor)
INSTALAR sdl mixer para audio
ela trata diferente som de fundo e efeito sonoro
musica de fundo vai tudo
efeito sonoro so .wav